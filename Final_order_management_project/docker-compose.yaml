version: '4'

services:
  product-service:
    image: akshaya7777/productapp
    build:
      context: ./productapp
      dockerfile: Dockerfile
    container_name: productapp
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    networks:
      - ms-network
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/productdb

  order-service:
    image: akshaya7777/ordersapp:latest
    build:
      context: ./ordersapp
      dockerfile: Dockerfile
    container_name: ordersapp
    ports:
      - "8001:8001"
    depends_on:
      - mysql
      - kafka
    networks:
      - ms-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/projectdb?autoReconnect=true&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: mysql

  inventory-service:
    image: akshaya7777/inventoryapp
    build:
      context: ./inventoryapp
      dockerfile: Dockerfile
    container_name: inventoryapp
    ports:
      - "8002:8002"
    depends_on:
      - mysql
      - kafka
    networks:
      - ms-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/projectdb?autoReconnect=true&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: mysql

  notification-service:
     build:
       context: ./notificationapp
       dockerfile: Dockerfile
     container_name: notificationapp
     networks:
       - ms-network
     ports:
       - "8004:8004"
     depends_on:
       - kafka
     environment:
       KAFKA_BROKER: kafka:9092

  api-gateway:
    image: akshaya7777/api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8003:8003"
    networks:
      - ms-network
    depends_on:
      - product-service
      - order-service
      - inventory-service
      - notification-service
    environment:
      SPRING_CLOUD_GATEWAY_ROUTES[0].ID: product-service
      SPRING_CLOUD_GATEWAY_ROUTES[0].URI: http://product-service:8000
      SPRING_CLOUD_GATEWAY_ROUTES[0].PREDICATES: Path=/products/**

      SPRING_CLOUD_GATEWAY_ROUTES[1].ID: order-service
      SPRING_CLOUD_GATEWAY_ROUTES[1].URI: http://order-service:8001
      SPRING_CLOUD_GATEWAY_ROUTES[1].PREDICATES: Path=/orders/**

      SPRING_CLOUD_GATEWAY_ROUTES[2].ID: inventory-service
      SPRING_CLOUD_GATEWAY_ROUTES[2].URI: http://inventory-service:8002
      SPRING_CLOUD_GATEWAY_ROUTES[2].PREDICATES: Path=/inventory/**

  mysql:
    image: mysql:8.3.0
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: projectdb
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ms-network

  mongodb:
    image: mongo:7.0.5
    container_name: mongodb
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: productdb
    volumes:
      - mongo_data:/data/db
    networks:
      - ms-network

  kafka:
     image: wurstmeister/kafka:latest
     container_name: kafka
     networks:
       - ms-network
     ports:
       - "9092:9092"
     environment:
       KAFKA_BROKER_ID: 1
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_LISTENERS: PLAINTEXT://:9092
       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
     depends_on:
       - zookeeper

  zookeeper:
     image: wurstmeister/zookeeper:latest
     container_name: zookeeper
     networks:
       - ms-network
     ports:
       - "2181:2181"
     environment:
       ALLOW_ANONYMOUS_LOGIN: "yes"

volumes:
  mysql_data:
  mongo_data:
networks:
  ms-network:
    driver: bridge